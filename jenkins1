pipeline {
    parameters {
        string(name: 'apihost', defaultValue: 'http://3.34.215.218:3000', description:'')
    }
    environment {
        registry="mize159/wsjmweb"
        registryCredential='dockerhub'
        dockerImage = ''
        receipt="tjdhkdrb@gmail.com"
    }
    agent any
    stages {
        stage("git pull") {
            steps {
                git branch:'main',
                    url:'https://github.com/WSJMdev/webserver.git'
            }
        }
        
        stage("build") {
            steps{
                script {
                    dockerImage = docker.build registry + ":$BUILD_NUMBER"
                }
            }
        }
        
        stage("push") {
            steps {
                script {
                    docker.withRegistry('',registryCredential){
                        dockerImage.push()
                    }
                    
                }
                
            }
        }
        
        stage("Remove") {
            steps {
                sh "docker rmi $registry:$BUILD_NUMBER"
            }
        }
        
        stage("GarbageCollecTESTSERV") {
            steps {
                sshPublisher(
                    continueOnError: true, failOnError: false,
                    publishers: [
                        sshPublisherDesc(
                            configName: "web",
                            verbose: true,
                            transfers: [
                                sshTransfer(execCommand: "docker kill \$(docker ps | grep wsjmweb | tr ' ' '\t' | cut -f1)"),
                                sshTransfer(execCommand: "docker system prune -af")
                            ]
                        )
                    ]
                )
            }
        }
        
        stage("TestDeploy") {
            steps {
                sshPublisher(
                    continueOnError: false, failOnError: true,
                    publishers: [
                        sshPublisherDesc(
                            configName: "web",
                            verbose: true,
                            transfers: [
                                sshTransfer(execCommand: "docker login --username mize159 --password ahdk2424159!"),
                                sshTransfer(execCommand: "docker pull " + registry +":$BUILD_NUMBER"),
                                sshTransfer(execCommand: "docker run -d -p 80:80 -e APIHOST=$params.apihost " + registry +":$BUILD_NUMBER")
                            ]
                        )
                    ]
                )
            }
        }
        
    }
    post {
        success {
            echo 'Success!'
            mail bcc: '', 
                body: "Project: 웹(frontend) 서버 빌드 작업 <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", 
                cc: '', 
                charset: 'UTF-8', 
                from: '', 
                mimeType: 'text/html', 
                replyTo: '', 
                subject: "성공 CI: Project name -> 웹(frontend) 서버 빌드 작업", 
                to: "${receipt}";
        }
        failure {
            echo 'Fail!'
            mail bcc: '', 
                body: "Project: 웹(frontend) 서버 빌드 작업 <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", 
                cc: '', 
                charset: 'UTF-8', 
                from: '', 
                mimeType: 'text/html', 
                replyTo: '', 
                subject: "에러 CI: Project name -> 웹(frontend) 서버 빌드 작업", 
                to: "${receipt}";
        }
    }
}
